{"version":3,"sources":["flow-compiled-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,eAAR,CAAjB;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAI,OAAO,YAAX;;AAEA,OAAO,OAAP,GAAiB,IAAjB;;AAEA;;AAEA;;AAEA","file":"flow-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar createFlow = require('./_createFlow');\n\n/**\n * Creates a function that returns the result of invoking the given functions\n * with the `this` binding of the created function, where each successive\n * invocation is supplied the return value of the previous.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flowRight\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flow([_.add, square]);\n * addSquare(1, 2);\n * // => 9\n */\nvar flow = createFlow();\n\nmodule.exports = flow;\n\n//# sourceMappingURL=flow-compiled.js.map\n\n//# sourceMappingURL=flow-compiled-compiled.js.map\n\n//# sourceMappingURL=flow-compiled-compiled-compiled.js.map"]}