{"version":3,"sources":["thru-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAS,IAAT,CAAc,KAAd,EAAqB,WAArB,EAAkC;AAChC,SAAO,YAAY,KAAZ,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,IAAjB;;AAEA;;AAEA","file":"thru-compiled-compiled-compiled.js","sourcesContent":["\"use strict\";\n\n/**\n * This method is like `_.tap` except that it returns the result of `interceptor`.\n * The purpose of this method is to \"pass thru\" values replacing intermediate\n * results in a method chain sequence.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Seq\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @returns {*} Returns the result of `interceptor`.\n * @example\n *\n * _('  abc  ')\n *  .chain()\n *  .trim()\n *  .thru(function(value) {\n *    return [value];\n *  })\n *  .value();\n * // => ['abc']\n */\n\nfunction thru(value, interceptor) {\n  return interceptor(value);\n}\n\nmodule.exports = thru;\n\n//# sourceMappingURL=thru-compiled.js.map\n\n//# sourceMappingURL=thru-compiled-compiled.js.map"]}