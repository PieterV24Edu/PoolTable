{"version":3,"sources":["attempt-compiled-compiled-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;AAAA,IACI,WAAW,QAAQ,aAAR,CADf;AAAA,IAEI,UAAU,QAAQ,WAAR,CAFd;;AAIA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAI,UAAU,SAAS,UAAU,IAAV,EAAgB,IAAhB,EAAsB;AAC3C,MAAI;AACF,WAAO,MAAM,IAAN,EAAY,SAAZ,EAAuB,IAAvB,CAAP;AACD,GAFD,CAEE,OAAO,CAAP,EAAU;AACV,WAAO,QAAQ,CAAR,IAAa,CAAb,GAAiB,IAAI,KAAJ,CAAU,CAAV,CAAxB;AACD;AACF,CANa,CAAd;;AAQA,OAAO,OAAP,GAAiB,OAAjB;;AAEA;;AAEA;;AAEA;;AAEA","file":"attempt-compiled-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar apply = require('./_apply'),\n    baseRest = require('./_baseRest'),\n    isError = require('./isError');\n\n/**\n * Attempts to invoke `func`, returning either the result or the caught error\n * object. Any additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Function} func The function to attempt.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {*} Returns the `func` result or error object.\n * @example\n *\n * // Avoid throwing errors for invalid selectors.\n * var elements = _.attempt(function(selector) {\n *   return document.querySelectorAll(selector);\n * }, '>_>');\n *\n * if (_.isError(elements)) {\n *   elements = [];\n * }\n */\nvar attempt = baseRest(function (func, args) {\n  try {\n    return apply(func, undefined, args);\n  } catch (e) {\n    return isError(e) ? e : new Error(e);\n  }\n});\n\nmodule.exports = attempt;\n\n//# sourceMappingURL=attempt-compiled.js.map\n\n//# sourceMappingURL=attempt-compiled-compiled.js.map\n\n//# sourceMappingURL=attempt-compiled-compiled-compiled.js.map\n\n//# sourceMappingURL=attempt-compiled-compiled-compiled-compiled.js.map"]}