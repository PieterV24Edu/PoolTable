{"version":3,"sources":["keyBy-compiled-compiled-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,mBAAmB,QAAQ,qBAAR,CAAvB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,IAAI,QAAQ,iBAAiB,UAAU,MAAV,EAAkB,KAAlB,EAAyB,GAAzB,EAA8B;AACzD,SAAO,GAAP,IAAc,KAAd;AACD,CAFW,CAAZ;;AAIA,OAAO,OAAP,GAAiB,KAAjB;;AAEA;;AAEA;;AAEA;;AAEA","file":"keyBy-compiled-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity]\n *  The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function (result, value, key) {\n  result[key] = value;\n});\n\nmodule.exports = keyBy;\n\n//# sourceMappingURL=keyBy-compiled.js.map\n\n//# sourceMappingURL=keyBy-compiled-compiled.js.map\n\n//# sourceMappingURL=keyBy-compiled-compiled-compiled.js.map\n\n//# sourceMappingURL=keyBy-compiled-compiled-compiled-compiled.js.map"]}