{"version":3,"sources":["padStart-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,gBAAgB,QAAQ,kBAAR,CAApB;AAAA,IACI,aAAa,QAAQ,eAAR,CADjB;AAAA,IAEI,YAAY,QAAQ,aAAR,CAFhB;AAAA,IAGI,WAAW,QAAQ,YAAR,CAHf;;AAKA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAS,QAAT,CAAkB,MAAlB,EAA0B,MAA1B,EAAkC,KAAlC,EAAyC;AACrC,aAAS,SAAS,MAAT,CAAT;AACA,aAAS,UAAU,MAAV,CAAT;;AAEA,QAAI,YAAY,SAAS,WAAW,MAAX,CAAT,GAA8B,CAA9C;AACA,WAAO,UAAU,YAAY,MAAtB,GAA+B,cAAc,SAAS,SAAvB,EAAkC,KAAlC,IAA2C,MAA1E,GAAmF,MAA1F;AACH;;AAED,OAAO,OAAP,GAAiB,QAAjB;;AAEA","file":"padStart-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar createPadding = require('./_createPadding'),\n    stringSize = require('./_stringSize'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Pads `string` on the left side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padStart('abc', 6);\n * // => '   abc'\n *\n * _.padStart('abc', 6, '_-');\n * // => '_-_abc'\n *\n * _.padStart('abc', 3);\n * // => 'abc'\n */\nfunction padStart(string, length, chars) {\n    string = toString(string);\n    length = toInteger(length);\n\n    var strLength = length ? stringSize(string) : 0;\n    return length && strLength < length ? createPadding(length - strLength, chars) + string : string;\n}\n\nmodule.exports = padStart;\n\n//# sourceMappingURL=padStart-compiled.js.map"]}