{"version":3,"sources":["maxBy-compiled-compiled-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,SAAS,QAAQ,WAAR,CADb;AAAA,IAEI,eAAe,QAAQ,iBAAR,CAFnB;;AAIA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAS,KAAT,CAAe,KAAf,EAAsB,QAAtB,EAAgC;AAC5B,WAAO,SAAS,MAAM,MAAf,GAAwB,aAAa,KAAb,EAAoB,aAAa,QAAb,EAAuB,CAAvB,CAApB,EAA+C,MAA/C,CAAxB,GAAiF,SAAxF;AACH;;AAED,OAAO,OAAP,GAAiB,KAAjB;;AAEA;;AAEA;;AAEA;;AAEA","file":"maxBy-compiled-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nfunction maxBy(array, iteratee) {\n    return array && array.length ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt) : undefined;\n}\n\nmodule.exports = maxBy;\n\n//# sourceMappingURL=maxBy-compiled.js.map\n\n//# sourceMappingURL=maxBy-compiled-compiled.js.map\n\n//# sourceMappingURL=maxBy-compiled-compiled-compiled.js.map\n\n//# sourceMappingURL=maxBy-compiled-compiled-compiled-compiled.js.map"]}