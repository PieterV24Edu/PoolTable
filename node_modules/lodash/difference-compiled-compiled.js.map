{"version":3,"sources":["difference-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,iBAAiB,QAAQ,mBAAR,CAArB;AAAA,IACI,cAAc,QAAQ,gBAAR,CADlB;AAAA,IAEI,WAAW,QAAQ,aAAR,CAFf;AAAA,IAGI,oBAAoB,QAAQ,qBAAR,CAHxB;;AAKA;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAI,aAAa,SAAS,UAAU,KAAV,EAAiB,MAAjB,EAAyB;AAC/C,WAAO,kBAAkB,KAAlB,IAA2B,eAAe,KAAf,EAAsB,YAAY,MAAZ,EAAoB,CAApB,EAAuB,iBAAvB,EAA0C,IAA1C,CAAtB,CAA3B,GAAoG,EAA3G;AACH,CAFgB,CAAjB;;AAIA,OAAO,OAAP,GAAiB,UAAjB;;AAEA","file":"difference-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order of result values is determined by the\n * order they occur in the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function (array, values) {\n    return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];\n});\n\nmodule.exports = difference;\n\n//# sourceMappingURL=difference-compiled.js.map"]}