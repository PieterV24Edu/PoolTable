{"version":3,"sources":["takeWhile-compiled-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,YAAY,QAAQ,cAAR,CADhB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,SAAS,SAAT,CAAmB,KAAnB,EAA0B,SAA1B,EAAqC;AACjC,WAAO,SAAS,MAAM,MAAf,GAAwB,UAAU,KAAV,EAAiB,aAAa,SAAb,EAAwB,CAAxB,CAAjB,CAAxB,GAAuE,EAA9E;AACH;;AAED,OAAO,OAAP,GAAiB,SAAjB;;AAEA;;AAEA;;AAEA","file":"takeWhile-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar baseIteratee = require('./_baseIteratee'),\n    baseWhile = require('./_baseWhile');\n\n/**\n * Creates a slice of `array` with elements taken from the beginning. Elements\n * are taken until `predicate` returns falsey. The predicate is invoked with\n * three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Function} [predicate=_.identity]\n *  The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false},\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.takeWhile(users, function(o) { return !o.active; });\n * // => objects for ['barney', 'fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.takeWhile(users, { 'user': 'barney', 'active': false });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.takeWhile(users, ['active', false]);\n * // => objects for ['barney', 'fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.takeWhile(users, 'active');\n * // => []\n */\nfunction takeWhile(array, predicate) {\n    return array && array.length ? baseWhile(array, baseIteratee(predicate, 3)) : [];\n}\n\nmodule.exports = takeWhile;\n\n//# sourceMappingURL=takeWhile-compiled.js.map\n\n//# sourceMappingURL=takeWhile-compiled-compiled.js.map\n\n//# sourceMappingURL=takeWhile-compiled-compiled-compiled.js.map"]}