{"version":3,"sources":["_isMasked-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,eAAR,CAAjB;;AAEA;AACA,IAAI,aAAa,YAAY;AAC3B,MAAI,MAAM,SAAS,IAAT,CAAc,cAAc,WAAW,IAAzB,IAAiC,WAAW,IAAX,CAAgB,QAAjD,IAA6D,EAA3E,CAAV;AACA,SAAO,MAAM,mBAAmB,GAAzB,GAA+B,EAAtC;AACD,CAHgB,EAAjB;;AAKA;;;;;;;AAOA,SAAS,QAAT,CAAkB,IAAlB,EAAwB;AACtB,SAAO,CAAC,CAAC,UAAF,IAAgB,cAAc,IAArC;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB;;AAEA;;AAEA","file":"_isMasked-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;\n\n//# sourceMappingURL=_isMasked-compiled.js.map\n\n//# sourceMappingURL=_isMasked-compiled-compiled.js.map"]}