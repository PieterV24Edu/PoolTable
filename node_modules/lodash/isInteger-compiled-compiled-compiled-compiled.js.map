{"version":3,"sources":["isInteger-compiled-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,YAAY,QAAQ,aAAR,CAAhB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,SAAO,OAAO,KAAP,IAAgB,QAAhB,IAA4B,SAAS,UAAU,KAAV,CAA5C;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB;;AAEA;;AAEA;;AAEA","file":"isInteger-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar toInteger = require('./toInteger');\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\nmodule.exports = isInteger;\n\n//# sourceMappingURL=isInteger-compiled.js.map\n\n//# sourceMappingURL=isInteger-compiled-compiled.js.map\n\n//# sourceMappingURL=isInteger-compiled-compiled-compiled.js.map"]}