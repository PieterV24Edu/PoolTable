{"version":3,"sources":["xor-compiled-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,WAAW,QAAQ,aAAR,CADf;AAAA,IAEI,UAAU,QAAQ,YAAR,CAFd;AAAA,IAGI,oBAAoB,QAAQ,qBAAR,CAHxB;;AAKA;;;;;;;;;;;;;;;;;;AAkBA,IAAI,MAAM,SAAS,UAAU,MAAV,EAAkB;AACnC,SAAO,QAAQ,YAAY,MAAZ,EAAoB,iBAApB,CAAR,CAAP;AACD,CAFS,CAAV;;AAIA,OAAO,OAAP,GAAiB,GAAjB;;AAEA;;AAEA;;AAEA","file":"xor-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar arrayFilter = require('./_arrayFilter'),\n    baseRest = require('./_baseRest'),\n    baseXor = require('./_baseXor'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values that is the\n * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n * of the given arrays. The order of result values is determined by the order\n * they occur in the arrays.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.without\n * @example\n *\n * _.xor([2, 1], [2, 3]);\n * // => [1, 3]\n */\nvar xor = baseRest(function (arrays) {\n  return baseXor(arrayFilter(arrays, isArrayLikeObject));\n});\n\nmodule.exports = xor;\n\n//# sourceMappingURL=xor-compiled.js.map\n\n//# sourceMappingURL=xor-compiled-compiled.js.map\n\n//# sourceMappingURL=xor-compiled-compiled-compiled.js.map"]}