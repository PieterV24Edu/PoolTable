{"version":3,"sources":["_stackSet-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,YAAY,QAAQ,cAAR,CAAhB;AAAA,IACI,MAAM,QAAQ,QAAR,CADV;AAAA,IAEI,WAAW,QAAQ,aAAR,CAFf;;AAIA;AACA,IAAI,mBAAmB,GAAvB;;AAEA;;;;;;;;;;AAUA,SAAS,QAAT,CAAkB,GAAlB,EAAuB,KAAvB,EAA8B;AAC5B,MAAI,QAAQ,KAAK,QAAjB;AACA,MAAI,iBAAiB,SAArB,EAAgC;AAC9B,QAAI,QAAQ,MAAM,QAAlB;AACA,QAAI,CAAC,GAAD,IAAQ,MAAM,MAAN,GAAe,mBAAmB,CAA9C,EAAiD;AAC/C,YAAM,IAAN,CAAW,CAAC,GAAD,EAAM,KAAN,CAAX;AACA,aAAO,IAAP;AACD;AACD,YAAQ,KAAK,QAAL,GAAgB,IAAI,QAAJ,CAAa,KAAb,CAAxB;AACD;AACD,QAAM,GAAN,CAAU,GAAV,EAAe,KAAf;AACA,SAAO,IAAP;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB;;AAEA","file":"_stackSet-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\nmodule.exports = stackSet;\n\n//# sourceMappingURL=_stackSet-compiled.js.map"]}