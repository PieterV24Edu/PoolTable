{"version":3,"sources":["flowRight-compiled-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,eAAR,CAAjB;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAI,YAAY,WAAW,IAAX,CAAhB;;AAEA,OAAO,OAAP,GAAiB,SAAjB;;AAEA;;AAEA;;AAEA","file":"flowRight-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar createFlow = require('./_createFlow');\n\n/**\n * This method is like `_.flow` except that it creates a function that\n * invokes the given functions from right to left.\n *\n * @static\n * @since 3.0.0\n * @memberOf _\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flow\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flowRight([square, _.add]);\n * addSquare(1, 2);\n * // => 9\n */\nvar flowRight = createFlow(true);\n\nmodule.exports = flowRight;\n\n//# sourceMappingURL=flowRight-compiled.js.map\n\n//# sourceMappingURL=flowRight-compiled-compiled.js.map\n\n//# sourceMappingURL=flowRight-compiled-compiled-compiled.js.map"]}