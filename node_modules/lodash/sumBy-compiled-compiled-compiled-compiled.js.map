{"version":3,"sources":["sumBy-compiled-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,UAAU,QAAQ,YAAR,CADd;;AAGA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAS,KAAT,CAAe,KAAf,EAAsB,QAAtB,EAAgC;AAC5B,WAAO,SAAS,MAAM,MAAf,GAAwB,QAAQ,KAAR,EAAe,aAAa,QAAb,EAAuB,CAAvB,CAAf,CAAxB,GAAoE,CAA3E;AACH;;AAED,OAAO,OAAP,GAAiB,KAAjB;;AAEA;;AAEA;;AAEA","file":"sumBy-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n    return array && array.length ? baseSum(array, baseIteratee(iteratee, 2)) : 0;\n}\n\nmodule.exports = sumBy;\n\n//# sourceMappingURL=sumBy-compiled.js.map\n\n//# sourceMappingURL=sumBy-compiled-compiled.js.map\n\n//# sourceMappingURL=sumBy-compiled-compiled-compiled.js.map"]}