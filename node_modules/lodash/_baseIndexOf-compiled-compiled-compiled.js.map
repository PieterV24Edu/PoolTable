{"version":3,"sources":["_baseIndexOf-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,gBAAgB,QAAQ,kBAAR,CAApB;AAAA,IACI,YAAY,QAAQ,cAAR,CADhB;;AAGA;;;;;;;;;AASA,SAAS,WAAT,CAAqB,KAArB,EAA4B,KAA5B,EAAmC,SAAnC,EAA8C;AAC5C,MAAI,UAAU,KAAd,EAAqB;AACnB,WAAO,cAAc,KAAd,EAAqB,SAArB,EAAgC,SAAhC,CAAP;AACD;AACD,MAAI,QAAQ,YAAY,CAAxB;AAAA,MACI,SAAS,MAAM,MADnB;;AAGA,SAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,QAAI,MAAM,KAAN,MAAiB,KAArB,EAA4B;AAC1B,aAAO,KAAP;AACD;AACF;AACD,SAAO,CAAC,CAAR;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB;;AAEA;;AAEA","file":"_baseIndexOf-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOf;\n\n//# sourceMappingURL=_baseIndexOf-compiled.js.map\n\n//# sourceMappingURL=_baseIndexOf-compiled-compiled.js.map"]}