{"version":3,"sources":["concat-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,YAAY,QAAQ,cAAR,CAAhB;AAAA,IACI,cAAc,QAAQ,gBAAR,CADlB;AAAA,IAEI,YAAY,QAAQ,cAAR,CAFhB;AAAA,IAGI,UAAU,QAAQ,WAAR,CAHd;;AAKA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAS,MAAT,GAAkB;AACd,QAAI,SAAS,UAAU,MAAvB;AAAA,QACI,OAAO,MAAM,SAAS,SAAS,CAAlB,GAAsB,CAA5B,CADX;AAAA,QAEI,QAAQ,UAAU,CAAV,CAFZ;AAAA,QAGI,QAAQ,MAHZ;;AAKA,WAAO,OAAP,EAAgB;AACZ,aAAK,QAAQ,CAAb,IAAkB,UAAU,KAAV,CAAlB;AACH;AACD,WAAO,SAAS,UAAU,QAAQ,KAAR,IAAiB,UAAU,KAAV,CAAjB,GAAoC,CAAC,KAAD,CAA9C,EAAuD,YAAY,IAAZ,EAAkB,CAAlB,CAAvD,CAAT,GAAwF,EAA/F;AACH;;AAED,OAAO,OAAP,GAAiB,MAAjB;;AAEA;;AAEA","file":"concat-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar arrayPush = require('./_arrayPush'),\n    baseFlatten = require('./_baseFlatten'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray');\n\n/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to concatenate.\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\nfunction concat() {\n    var length = arguments.length,\n        args = Array(length ? length - 1 : 0),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n        args[index - 1] = arguments[index];\n    }\n    return length ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1)) : [];\n}\n\nmodule.exports = concat;\n\n//# sourceMappingURL=concat-compiled.js.map\n\n//# sourceMappingURL=concat-compiled-compiled.js.map"]}