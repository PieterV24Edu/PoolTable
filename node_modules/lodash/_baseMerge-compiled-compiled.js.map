{"version":3,"sources":["_baseMerge-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;AAAA,IACI,YAAY,QAAQ,cAAR,CADhB;AAAA,IAEI,mBAAmB,QAAQ,qBAAR,CAFvB;AAAA,IAGI,aAAa,QAAQ,eAAR,CAHjB;AAAA,IAII,gBAAgB,QAAQ,kBAAR,CAJpB;AAAA,IAKI,UAAU,QAAQ,WAAR,CALd;AAAA,IAMI,WAAW,QAAQ,YAAR,CANf;AAAA,IAOI,eAAe,QAAQ,gBAAR,CAPnB;;AASA;;;;;;;;;;;AAWA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C,UAA7C,EAAyD,KAAzD,EAAgE;AAC9D,MAAI,WAAW,MAAf,EAAuB;AACrB;AACD;AACD,MAAI,EAAE,QAAQ,MAAR,KAAmB,aAAa,MAAb,CAArB,CAAJ,EAAgD;AAC9C,QAAI,QAAQ,WAAW,MAAX,CAAZ;AACD;AACD,YAAU,SAAS,MAAnB,EAA2B,UAAU,QAAV,EAAoB,GAApB,EAAyB;AAClD,QAAI,KAAJ,EAAW;AACT,YAAM,QAAN;AACA,iBAAW,OAAO,GAAP,CAAX;AACD;AACD,QAAI,SAAS,QAAT,CAAJ,EAAwB;AACtB,gBAAU,QAAQ,IAAI,KAAJ,EAAlB;AACA,oBAAc,MAAd,EAAsB,MAAtB,EAA8B,GAA9B,EAAmC,QAAnC,EAA6C,SAA7C,EAAwD,UAAxD,EAAoE,KAApE;AACD,KAHD,MAGO;AACL,UAAI,WAAW,aAAa,WAAW,OAAO,GAAP,CAAX,EAAwB,QAAxB,EAAkC,MAAM,EAAxC,EAA4C,MAA5C,EAAoD,MAApD,EAA4D,KAA5D,CAAb,GAAkF,SAAjG;;AAEA,UAAI,aAAa,SAAjB,EAA4B;AAC1B,mBAAW,QAAX;AACD;AACD,uBAAiB,MAAjB,EAAyB,GAAzB,EAA8B,QAA9B;AACD;AACF,GAhBD;AAiBD;;AAED,OAAO,OAAP,GAAiB,SAAjB;;AAEA","file":"_baseMerge-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseKeysIn = require('./_baseKeysIn'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isArray = require('./isArray'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  if (!(isArray(source) || isTypedArray(source))) {\n    var props = baseKeysIn(source);\n  }\n  arrayEach(props || source, function (srcValue, key) {\n    if (props) {\n      key = srcValue;\n      srcValue = source[key];\n    }\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack());\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    } else {\n      var newValue = customizer ? customizer(object[key], srcValue, key + '', object, source, stack) : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  });\n}\n\nmodule.exports = baseMerge;\n\n//# sourceMappingURL=_baseMerge-compiled.js.map"]}