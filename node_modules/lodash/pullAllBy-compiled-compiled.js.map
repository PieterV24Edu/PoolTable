{"version":3,"sources":["pullAllBy-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,eAAe,QAAQ,iBAAR,CAAnB;AAAA,IACI,cAAc,QAAQ,gBAAR,CADlB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAS,SAAT,CAAmB,KAAnB,EAA0B,MAA1B,EAAkC,QAAlC,EAA4C;AACxC,WAAO,SAAS,MAAM,MAAf,IAAyB,MAAzB,IAAmC,OAAO,MAA1C,GAAmD,YAAY,KAAZ,EAAmB,MAAnB,EAA2B,aAAa,QAAb,EAAuB,CAAvB,CAA3B,CAAnD,GAA2G,KAAlH;AACH;;AAED,OAAO,OAAP,GAAiB,SAAjB;;AAEA","file":"pullAllBy-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar baseIteratee = require('./_baseIteratee'),\n    basePullAll = require('./_basePullAll');\n\n/**\n * This method is like `_.pullAll` except that it accepts `iteratee` which is\n * invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The iteratee is invoked with one argument: (value).\n *\n * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n *\n * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n * console.log(array);\n * // => [{ 'x': 2 }]\n */\nfunction pullAllBy(array, values, iteratee) {\n    return array && array.length && values && values.length ? basePullAll(array, values, baseIteratee(iteratee, 2)) : array;\n}\n\nmodule.exports = pullAllBy;\n\n//# sourceMappingURL=pullAllBy-compiled.js.map"]}