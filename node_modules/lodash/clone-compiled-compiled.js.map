{"version":3,"sources":["clone-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,YAAY,QAAQ,cAAR,CAAhB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAS,KAAT,CAAe,KAAf,EAAsB;AACpB,SAAO,UAAU,KAAV,EAAiB,KAAjB,EAAwB,IAAxB,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,KAAjB;;AAEA","file":"clone-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar baseClone = require('./_baseClone');\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, false, true);\n}\n\nmodule.exports = clone;\n\n//# sourceMappingURL=clone-compiled.js.map"]}