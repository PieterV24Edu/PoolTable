{"version":3,"sources":["findKey-compiled-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,cAAc,QAAQ,gBAAR,CAAlB;AAAA,IACI,aAAa,QAAQ,eAAR,CADjB;AAAA,IAEI,eAAe,QAAQ,iBAAR,CAFnB;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAS,OAAT,CAAiB,MAAjB,EAAyB,SAAzB,EAAoC;AAClC,SAAO,YAAY,MAAZ,EAAoB,aAAa,SAAb,EAAwB,CAAxB,CAApB,EAAgD,UAAhD,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB;;AAEA;;AAEA;;AAEA","file":"findKey-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar baseFindKey = require('./_baseFindKey'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.find` except that it returns the key of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {string|undefined} Returns the key of the matched element,\n *  else `undefined`.\n * @example\n *\n * var users = {\n *   'barney':  { 'age': 36, 'active': true },\n *   'fred':    { 'age': 40, 'active': false },\n *   'pebbles': { 'age': 1,  'active': true }\n * };\n *\n * _.findKey(users, function(o) { return o.age < 40; });\n * // => 'barney' (iteration order is not guaranteed)\n *\n * // The `_.matches` iteratee shorthand.\n * _.findKey(users, { 'age': 1, 'active': true });\n * // => 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findKey(users, ['active', false]);\n * // => 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.findKey(users, 'active');\n * // => 'barney'\n */\nfunction findKey(object, predicate) {\n  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);\n}\n\nmodule.exports = findKey;\n\n//# sourceMappingURL=findKey-compiled.js.map\n\n//# sourceMappingURL=findKey-compiled-compiled.js.map\n\n//# sourceMappingURL=findKey-compiled-compiled-compiled.js.map"]}