{"version":3,"sources":["without-compiled-compiled.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,iBAAiB,QAAQ,mBAAR,CAArB;AAAA,IACI,WAAW,QAAQ,aAAR,CADf;AAAA,IAEI,oBAAoB,QAAQ,qBAAR,CAFxB;;AAIA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAI,UAAU,SAAS,UAAU,KAAV,EAAiB,MAAjB,EAAyB;AAC5C,WAAO,kBAAkB,KAAlB,IAA2B,eAAe,KAAf,EAAsB,MAAtB,CAA3B,GAA2D,EAAlE;AACH,CAFa,CAAd;;AAIA,OAAO,OAAP,GAAiB,OAAjB;;AAEA;;AAEA","file":"without-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar baseDifference = require('./_baseDifference'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */\nvar without = baseRest(function (array, values) {\n    return isArrayLikeObject(array) ? baseDifference(array, values) : [];\n});\n\nmodule.exports = without;\n\n//# sourceMappingURL=without-compiled.js.map\n\n//# sourceMappingURL=without-compiled-compiled.js.map"]}