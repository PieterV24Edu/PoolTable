{"version":3,"sources":["bl-compiled-compiled-compiled.js"],"names":[],"mappings":"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","file":"bl-compiled-compiled-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar DuplexStream = require('readable-stream/duplex'),\n    util = require('util');\n\nfunction BufferList(callback) {\n  if (!(this instanceof BufferList)) return new BufferList(callback);\n\n  this._bufs = [];\n  this.length = 0;\n\n  if (typeof callback == 'function') {\n    this._callback = callback;\n\n    var piper = function piper(err) {\n      if (this._callback) {\n        this._callback(err);\n        this._callback = null;\n      }\n    }.bind(this);\n\n    this.on('pipe', function onPipe(src) {\n      src.on('error', piper);\n    });\n    this.on('unpipe', function onUnpipe(src) {\n      src.removeListener('error', piper);\n    });\n  } else {\n    this.append(callback);\n  }\n\n  DuplexStream.call(this);\n}\n\nutil.inherits(BufferList, DuplexStream);\n\nBufferList.prototype._offset = function _offset(offset) {\n  var tot = 0,\n      i = 0,\n      _t;\n  for (; i < this._bufs.length; i++) {\n    _t = tot + this._bufs[i].length;\n    if (offset < _t) return [i, offset - tot];\n    tot = _t;\n  }\n};\n\nBufferList.prototype.append = function append(buf) {\n  var i = 0,\n      newBuf;\n\n  if (Array.isArray(buf)) {\n    for (; i < buf.length; i++) {\n      this.append(buf[i]);\n    }\n  } else if (buf instanceof BufferList) {\n    // unwrap argument into individual BufferLists\n    for (; i < buf._bufs.length; i++) {\n      this.append(buf._bufs[i]);\n    }\n  } else if (buf != null) {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf == 'number') buf = buf.toString();\n\n    newBuf = Buffer.isBuffer(buf) ? buf : new Buffer(buf);\n    this._bufs.push(newBuf);\n    this.length += newBuf.length;\n  }\n\n  return this;\n};\n\nBufferList.prototype._write = function _write(buf, encoding, callback) {\n  this.append(buf);\n\n  if (typeof callback == 'function') callback();\n};\n\nBufferList.prototype._read = function _read(size) {\n  if (!this.length) return this.push(null);\n\n  size = Math.min(size, this.length);\n  this.push(this.slice(0, size));\n  this.consume(size);\n};\n\nBufferList.prototype.end = function end(chunk) {\n  DuplexStream.prototype.end.call(this, chunk);\n\n  if (this._callback) {\n    this._callback(null, this.slice());\n    this._callback = null;\n  }\n};\n\nBufferList.prototype.get = function get(index) {\n  return this.slice(index, index + 1)[0];\n};\n\nBufferList.prototype.slice = function slice(start, end) {\n  return this.copy(null, 0, start, end);\n};\n\nBufferList.prototype.copy = function copy(dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart != 'number' || srcStart < 0) srcStart = 0;\n  if (typeof srcEnd != 'number' || srcEnd > this.length) srcEnd = this.length;\n  if (srcStart >= this.length) return dst || new Buffer(0);\n  if (srcEnd <= 0) return dst || new Buffer(0);\n\n  var copy = !!dst,\n      off = this._offset(srcStart),\n      len = srcEnd - srcStart,\n      bytes = len,\n      bufoff = copy && dstStart || 0,\n      start = off[1],\n      l,\n      i;\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd == this.length) {\n    if (!copy) // slice, just return a full concat\n      return Buffer.concat(this._bufs);\n\n    // copy, need to copy individual buffers\n    for (i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff);\n      bufoff += this._bufs[i].length;\n    }\n\n    return dst;\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes) : this._bufs[off[0]].slice(start, start + bytes);\n  }\n\n  if (!copy) // a slice, we need something to copy in to\n    dst = new Buffer(len);\n\n  for (i = off[0]; i < this._bufs.length; i++) {\n    l = this._bufs[i].length - start;\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start);\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes);\n      break;\n    }\n\n    bufoff += l;\n    bytes -= l;\n\n    if (start) start = 0;\n  }\n\n  return dst;\n};\n\nBufferList.prototype.toString = function toString(encoding, start, end) {\n  return this.slice(start, end).toString(encoding);\n};\n\nBufferList.prototype.consume = function consume(bytes) {\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length;\n      this.length -= this._bufs[0].length;\n      this._bufs.shift();\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes);\n      this.length -= bytes;\n      break;\n    }\n  }\n  return this;\n};\n\nBufferList.prototype.duplicate = function duplicate() {\n  var i = 0,\n      copy = new BufferList();\n\n  for (; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i]);\n  }return copy;\n};\n\nBufferList.prototype.destroy = function destroy() {\n  this._bufs.length = 0;\n  this.length = 0;\n  this.push(null);\n};(function () {\n  var methods = {\n    'readDoubleBE': 8,\n    'readDoubleLE': 8,\n    'readFloatBE': 4,\n    'readFloatLE': 4,\n    'readInt32BE': 4,\n    'readInt32LE': 4,\n    'readUInt32BE': 4,\n    'readUInt32LE': 4,\n    'readInt16BE': 2,\n    'readInt16LE': 2,\n    'readUInt16BE': 2,\n    'readUInt16LE': 2,\n    'readInt8': 1,\n    'readUInt8': 1\n  };\n\n  for (var m in methods) {\n    (function (m) {\n      BufferList.prototype[m] = function (offset) {\n        return this.slice(offset, offset + methods[m])[m](0);\n      };\n    })(m);\n  }\n})();\n\nmodule.exports = BufferList;\n\n//# sourceMappingURL=bl-compiled.js.map\n\n//# sourceMappingURL=bl-compiled-compiled.js.map\n\n//# sourceMappingURL=bl-compiled-compiled-compiled.js.map"]}